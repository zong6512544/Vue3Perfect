@import '../mixins/utilities';
.d-inline-block {
  display: inline-block;
}
.d-block {
  display: block;
}
.d-none {
  display: none !important;
}
.d-flex {
  display: flex;
}

.flex-col {
  display: flex;
  flex-direction: column;
}

.jc-sb {
  justify-content: space-between;
}

.jc-fe {
  justify-content: flex-end;
}

.jc-c {
  justify-content: center;
}

.ai-c {
  align-items: center;
}

.ai-fe {
  align-items: flex-end;
}



.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flex-xcenter {
  align-items: center;
}

.flex-start {
  display: flex;
  align-items: flex-start;
}

.of-hidden {
  overflow: hidden;
}
.of-auto {
  overflow: auto;
}
.ofx-hidden {
  overflow-x: hidden;
}
.ofy-hidden {
  overflow-y: hidden;
}
.ofx-auto {
  overflow-x: auto;
}
.ofy-auto {
  overflow-y: auto;
}
// Utilities

$utilities: () !default;
$utilities: map-merge(
  (
    // Flex utilities
      'flex':
      (
        responsive: true,
        property: flex,
        values: (
          fill: 1 1 auto
        )
      ),
    'flex-direction': (
      responsive: true,
      property: flex-direction,
      class: flex,
      values: row column row-reverse column-reverse
    ),
    'flex-grow': (
      responsive: true,
      property: flex-grow,
      class: flex,
      values: (
        grow-0: 0,
        grow-1: 1,
        grow-2: 2
      )
    ),
    'flex-shrink': (
      responsive: true,
      property: flex-shrink,
      class: flex,
      values: (
        shrink-0: 0,
        shrink-1: 1
      )
    ),
    'flex-wrap': (
      responsive: true,
      property: flex-wrap,
      class: flex,
      values: wrap nowrap wrap-reverse
    ),
    'justify-content': (
      responsive: true,
      property: justify-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly
      )
    ),
    'align-items': (
      responsive: true,
      property: align-items,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch
      )
    ),
    'align-content': (
      responsive: true,
      property: align-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch
      )
    ),
    'align-self': (
      responsive: true,
      property: align-self,
      values: (
        auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch
      )
    ),
    'order': (
      responsive: true,
      property: order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6
      )
    )
  ),
  $utilities
);
@each $key, $utility in $utilities {
  // The utility can be disabled with `false`, thus check if the utility is a map first
  // Only proceed if responsive media queries are enabled or if it's the base media query
  @if type-of($utility) == 'map' {
    @include generate-utility($utility, '');
  }
}
